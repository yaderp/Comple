#include<iostream>
#include<list>

using namespace std;


class Graph
{
	int V;   
	list<int> *adj;    
	
public:
	Graph(int V)
	{
		this->V = V;
		adj = new list<int>[V];
	}
	void Agregar(int v, int w)
	{
		adj[v].push_back(w);
	}
	void DFSUtil(int v, bool visitado[])
	{
		visitado[v] = true;
		cout << v << " ";


		list<int>::iterator i;
		for (i = adj[v].begin(); i != adj[v].end(); ++i)
			if (!visitado[*i])
				DFSUtil(*i, visitado);
	}
	void DFS(int v)
	{
		bool *visitado = new bool[V];
		for (int i = 0; i < V; i++)
			visitado[i] = false;


		DFSUtil(v, visitado);
	}
};